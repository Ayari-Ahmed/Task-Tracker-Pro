<!-- views/projects/edit.ejs -->
<div class="d-flex justify-content-between align-items-center mb-4">
  <div>
    <h1 class="h3 mb-0">Edit Project: <%= project.name %></h1>
    <p class="text-muted">Update project details and assignments</p>
  </div>
  <a href="/projects/<%= project._id %>" class="btn btn-outline-secondary">
    <i class="fas fa-arrow-left me-2"></i>Back to Project
  </a>
</div>

<!-- Project Edit Form -->
<div class="card">
  <div class="card-body">
    <form id="editProjectForm" class="needs-validation" novalidate>
      <!-- Basic Information -->
      <div class="mb-4">
        <h5 class="card-title mb-3">Basic Information</h5>
        <div class="row g-3">
          <div class="col-md-8">
            <label for="name" class="form-label">Project Name</label>
            <input type="text" class="form-control" id="name" name="name" value="<%= project.name %>" required>
            <div class="invalid-feedback">Please enter a project name</div>
          </div>
          <div class="col-md-4">
            <label for="status" class="form-label">Status</label>
            <select class="form-select" id="status" name="status" required>
              <option value="planning" <%= project.status === 'planning' ? 'selected' : '' %>>Planning</option>
              <option value="active" <%= project.status === 'active' ? 'selected' : '' %>>Active</option>
              <option value="on_hold" <%= project.status === 'on_hold' ? 'selected' : '' %>>On Hold</option>
              <option value="completed" <%= project.status === 'completed' ? 'selected' : '' %>>Completed</option>
              <option value="cancelled" <%= project.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
            </select>
            <div class="invalid-feedback">Please select a status</div>
          </div>
        </div>
        <div class="mt-3">
          <label for="description" class="form-label">Description</label>
          <textarea class="form-control" id="description" name="description" rows="4" placeholder="Describe the project goals, scope, and objectives..."><%= project.description %></textarea>
        </div>
      </div>

      <!-- Timeline -->
      <div class="mb-4">
        <h5 class="card-title mb-3">Timeline</h5>
        <div class="row g-3">
          <div class="col-md-6">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" class="form-control" id="startDate" name="startDate" value="<%= project.startDate ? project.startDate.toISOString().split('T')[0] : '' %>" required>
            <div class="invalid-feedback">Please select a start date</div>
          </div>
          <div class="col-md-6">
            <label for="dueDate" class="form-label">Due Date</label>
            <input type="date" class="form-control" id="dueDate" name="dueDate" value="<%= project.dueDate ? project.dueDate.toISOString().split('T')[0] : '' %>">
            <div class="invalid-feedback">Please select a valid due date</div>
          </div>
        </div>
      </div>

      <!-- Team Assignment -->
      <div class="mb-4">
        <h5 class="card-title mb-3">Team Assignment</h5>
        <% if (user.role === 'admin') { %>
          <div class="mb-3">
            <label for="manager" class="form-label">Project Manager</label>
            <select class="form-select" id="manager" name="manager" required>
              <option value="">Select Project Manager</option>
              <% managers.forEach(manager => { %>
                <option value="<%= manager._id %>" <%= project.manager.toString() === manager._id.toString() ? 'selected' : '' %>><%= manager.name %></option>
              <% }); %>
            </select>
            <div class="invalid-feedback">Please select a project manager</div>
          </div>
        <% } else { %>
          <input type="hidden" name="manager" value="<%= user._id %>">
        <% } %>
        
        <div class="mb-3">
          <label class="form-label">Team Members</label>
          <div class="team-members-list">
            <% teamMembers.forEach(member => { %>
              <div class="form-check mb-2">
                <input class="form-check-input" type="checkbox" name="team" value="<%= member._id %>" id="member<%= member._id %>" 
                  <%= project.team.includes(member._id.toString()) ? 'checked' : '' %>>
                <label class="form-check-label" for="member<%= member._id %>">
                  <%= member.name %>
                  <% if (member.role === 'admin') { %>
                    <span class="badge bg-primary ms-2">Admin</span>
                  <% } else if (member.role === 'project_manager') { %>
                    <span class="badge bg-info ms-2">Manager</span>
                  <% } %>
                </label>
              </div>
            <% }); %>
          </div>
        </div>
      </div>

      <!-- Additional Settings -->
      <div class="mb-4">
        <h5 class="card-title mb-3">Additional Settings</h5>
        <div class="mb-3">
          <label for="priority" class="form-label">Priority Level</label>
          <select class="form-select" id="priority" name="priority">
            <option value="low" <%= project.priority === 'low' ? 'selected' : '' %>>Low</option>
            <option value="medium" <%= project.priority === 'medium' ? 'selected' : '' %>>Medium</option>
            <option value="high" <%= project.priority === 'high' ? 'selected' : '' %>>High</option>
          </select>
        </div>
        <div class="mb-3">
          <label for="category" class="form-label">Category</label>
          <input type="text" class="form-control" id="category" name="category" value="<%= project.category || '' %>" placeholder="e.g., Development, Marketing, Research">
        </div>
      </div>

      <!-- Form Actions -->
      <div class="d-flex justify-content-end gap-2">
        <button type="button" onclick="window.location.href='/projects/<%= project._id %>'" class="btn btn-outline-secondary">
          <i class="fas fa-times me-2"></i>Cancel
        </button>
        <button type="submit" class="btn btn-primary" id="saveProjectBtn">
          <i class="fas fa-save me-2"></i>Save Changes
        </button>
      </div>
    </form>
  </div>
</div>

<style>
.team-members-list {
  max-height: 200px;
  overflow-y: auto;
  border: 1px solid #dee2e6;
  border-radius: 0.25rem;
  padding: 1rem;
}

.form-check {
  padding: 0.5rem;
  border-radius: 0.25rem;
  transition: background-color 0.2s;
}

.form-check:hover {
  background-color: #f8f9fa;
}

.badge {
  font-size: 0.75rem;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('editProjectForm');
  const saveButton = document.getElementById('saveProjectBtn');

  form.addEventListener('submit', async function(event) {
    event.preventDefault(); // Prevent the default form submission
    
    if (!form.checkValidity()) {
      event.stopPropagation();
      form.classList.add('was-validated');
      return;
    }

    try {
      // Disable the save button and show loading state
      saveButton.disabled = true;
      saveButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Saving...';

      // Get form data
      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());
      
      // Convert team checkboxes to array
      data.team = Array.from(formData.getAll('team'));

      // Send PUT request
      const response = await fetch(`/api/projects/<%= project._id %>?_method=PUT`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
      });

      const result = await response.json();

      if (result.success) {
        // Redirect to project detail page
        window.location.href = `/projects/${result.data._id}`;
      } else {
        throw new Error(result.error || 'Failed to update project');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error updating project: ' + error.message);
      
      // Reset button state
      saveButton.disabled = false;
      saveButton.innerHTML = '<i class="fas fa-save me-2"></i>Save Changes';
    }
  });
});

// Date validation
document.getElementById('startDate').addEventListener('change', function() {
  const startDate = new Date(this.value);
  const dueDateInput = document.getElementById('dueDate');
  const dueDate = new Date(dueDateInput.value);
  
  if (dueDate < startDate) {
    dueDateInput.value = this.value;
  }
  
  dueDateInput.min = this.value;
});

document.getElementById('dueDate').addEventListener('change', function() {
  const dueDate = new Date(this.value);
  const startDate = new Date(document.getElementById('startDate').value);
  
  if (dueDate < startDate) {
    alert('Due date cannot be earlier than start date');
    this.value = document.getElementById('startDate').value;
  }
});
</script> 